server:
  port: 8080

spring:
  application:
    name: rent-office-backend

  datasource:
      url: ${DB_URL_AIVEN_CLOUD}
#      username: ${POSTGRES_USER}
#      password: ${POSTGRES_PASSWORD}

  data:
    web:
      pageable:
        one-indexed-parameters: true

    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD:}
      timeout: 300000 # milliseconds

  jpa:
    show-sql: false
    properties:
      hibernate:
        format_sql: true
    hibernate:
      ddl-auto: update
    defer-datasource-initialization: true


  threads:
    virtual:
      enabled: true

  jackson:
    property-naming-strategy: SNAKE_CASE
    default-property-inclusion: non_null

  kafka:
    bootstrap-servers: localhost:9092
    security:
      protocol: plaintext
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 30
      compression-type: lz4
      properties:
        enable.idempotence: true
        max.in.flight.requests.per.connection: 5
        spring.json.add.type.headers: false



kafka:
  email: nqv-email-service-dev




application:
  security:
    rsa:
      rsa-public-key: classpath:certs/public-key.pem
      rsa-private-key: classpath:certs/private-key.pem
    jwt:
      access-token-validity-in-seconds: 604800 # 1 day
      refresh-token-validity-in-seconds: 604800 # 7 days


cloudinary:
  url: ${CLOUDINARY_URL}



logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.orm.jdbc.bind: TRACE
